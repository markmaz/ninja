/*
 * This file is generated by jOOQ.
 */
package com.ninjarmm.dao.jooq.tables.records;


import com.ninjarmm.dao.jooq.tables.SchemaVersion;
import com.ninjarmm.dao.jooq.tables.interfaces.ISchemaVersion;

import java.time.LocalDateTime;

import javax.annotation.processing.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Index;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.13.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "schema_version", schema = "public", uniqueConstraints = {
    @UniqueConstraint(name = "schema_version_pk", columnNames = {"installed_rank"})
}, indexes = {
    @Index(name = "schema_version_s_idx", columnList = "success ASC")
})
public class SchemaVersionRecord extends UpdatableRecordImpl<SchemaVersionRecord> implements Record10<Integer, String, String, String, String, Integer, String, LocalDateTime, Integer, Boolean>, ISchemaVersion {

    private static final long serialVersionUID = -921312204;

    /**
     * Setter for <code>public.schema_version.installed_rank</code>.
     */
    @Override
    public SchemaVersionRecord setInstalledRank(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.schema_version.installed_rank</code>.
     */
    @Id
    @Column(name = "installed_rank", nullable = false, precision = 32)
    @Override
    public Integer getInstalledRank() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.schema_version.version</code>.
     */
    @Override
    public SchemaVersionRecord setVersion(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.schema_version.version</code>.
     */
    @Column(name = "version", length = 50)
    @Override
    public String getVersion() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.schema_version.description</code>.
     */
    @Override
    public SchemaVersionRecord setDescription(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.schema_version.description</code>.
     */
    @Column(name = "description", nullable = false, length = 200)
    @Override
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.schema_version.type</code>.
     */
    @Override
    public SchemaVersionRecord setType(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.schema_version.type</code>.
     */
    @Column(name = "type", nullable = false, length = 20)
    @Override
    public String getType() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.schema_version.script</code>.
     */
    @Override
    public SchemaVersionRecord setScript(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.schema_version.script</code>.
     */
    @Column(name = "script", nullable = false, length = 1000)
    @Override
    public String getScript() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.schema_version.checksum</code>.
     */
    @Override
    public SchemaVersionRecord setChecksum(Integer value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.schema_version.checksum</code>.
     */
    @Column(name = "checksum", precision = 32)
    @Override
    public Integer getChecksum() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>public.schema_version.installed_by</code>.
     */
    @Override
    public SchemaVersionRecord setInstalledBy(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.schema_version.installed_by</code>.
     */
    @Column(name = "installed_by", nullable = false, length = 100)
    @Override
    public String getInstalledBy() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.schema_version.installed_on</code>.
     */
    @Override
    public SchemaVersionRecord setInstalledOn(LocalDateTime value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.schema_version.installed_on</code>.
     */
    @Column(name = "installed_on", nullable = false)
    @Override
    public LocalDateTime getInstalledOn() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>public.schema_version.execution_time</code>.
     */
    @Override
    public SchemaVersionRecord setExecutionTime(Integer value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.schema_version.execution_time</code>.
     */
    @Column(name = "execution_time", nullable = false, precision = 32)
    @Override
    public Integer getExecutionTime() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>public.schema_version.success</code>.
     */
    @Override
    public SchemaVersionRecord setSuccess(Boolean value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>public.schema_version.success</code>.
     */
    @Column(name = "success", nullable = false)
    @Override
    public Boolean getSuccess() {
        return (Boolean) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<Integer, String, String, String, String, Integer, String, LocalDateTime, Integer, Boolean> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<Integer, String, String, String, String, Integer, String, LocalDateTime, Integer, Boolean> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return SchemaVersion.SCHEMA_VERSION.INSTALLED_RANK;
    }

    @Override
    public Field<String> field2() {
        return SchemaVersion.SCHEMA_VERSION.VERSION;
    }

    @Override
    public Field<String> field3() {
        return SchemaVersion.SCHEMA_VERSION.DESCRIPTION;
    }

    @Override
    public Field<String> field4() {
        return SchemaVersion.SCHEMA_VERSION.TYPE;
    }

    @Override
    public Field<String> field5() {
        return SchemaVersion.SCHEMA_VERSION.SCRIPT;
    }

    @Override
    public Field<Integer> field6() {
        return SchemaVersion.SCHEMA_VERSION.CHECKSUM;
    }

    @Override
    public Field<String> field7() {
        return SchemaVersion.SCHEMA_VERSION.INSTALLED_BY;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return SchemaVersion.SCHEMA_VERSION.INSTALLED_ON;
    }

    @Override
    public Field<Integer> field9() {
        return SchemaVersion.SCHEMA_VERSION.EXECUTION_TIME;
    }

    @Override
    public Field<Boolean> field10() {
        return SchemaVersion.SCHEMA_VERSION.SUCCESS;
    }

    @Override
    public Integer component1() {
        return getInstalledRank();
    }

    @Override
    public String component2() {
        return getVersion();
    }

    @Override
    public String component3() {
        return getDescription();
    }

    @Override
    public String component4() {
        return getType();
    }

    @Override
    public String component5() {
        return getScript();
    }

    @Override
    public Integer component6() {
        return getChecksum();
    }

    @Override
    public String component7() {
        return getInstalledBy();
    }

    @Override
    public LocalDateTime component8() {
        return getInstalledOn();
    }

    @Override
    public Integer component9() {
        return getExecutionTime();
    }

    @Override
    public Boolean component10() {
        return getSuccess();
    }

    @Override
    public Integer value1() {
        return getInstalledRank();
    }

    @Override
    public String value2() {
        return getVersion();
    }

    @Override
    public String value3() {
        return getDescription();
    }

    @Override
    public String value4() {
        return getType();
    }

    @Override
    public String value5() {
        return getScript();
    }

    @Override
    public Integer value6() {
        return getChecksum();
    }

    @Override
    public String value7() {
        return getInstalledBy();
    }

    @Override
    public LocalDateTime value8() {
        return getInstalledOn();
    }

    @Override
    public Integer value9() {
        return getExecutionTime();
    }

    @Override
    public Boolean value10() {
        return getSuccess();
    }

    @Override
    public SchemaVersionRecord value1(Integer value) {
        setInstalledRank(value);
        return this;
    }

    @Override
    public SchemaVersionRecord value2(String value) {
        setVersion(value);
        return this;
    }

    @Override
    public SchemaVersionRecord value3(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public SchemaVersionRecord value4(String value) {
        setType(value);
        return this;
    }

    @Override
    public SchemaVersionRecord value5(String value) {
        setScript(value);
        return this;
    }

    @Override
    public SchemaVersionRecord value6(Integer value) {
        setChecksum(value);
        return this;
    }

    @Override
    public SchemaVersionRecord value7(String value) {
        setInstalledBy(value);
        return this;
    }

    @Override
    public SchemaVersionRecord value8(LocalDateTime value) {
        setInstalledOn(value);
        return this;
    }

    @Override
    public SchemaVersionRecord value9(Integer value) {
        setExecutionTime(value);
        return this;
    }

    @Override
    public SchemaVersionRecord value10(Boolean value) {
        setSuccess(value);
        return this;
    }

    @Override
    public SchemaVersionRecord values(Integer value1, String value2, String value3, String value4, String value5, Integer value6, String value7, LocalDateTime value8, Integer value9, Boolean value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(ISchemaVersion from) {
        setInstalledRank(from.getInstalledRank());
        setVersion(from.getVersion());
        setDescription(from.getDescription());
        setType(from.getType());
        setScript(from.getScript());
        setChecksum(from.getChecksum());
        setInstalledBy(from.getInstalledBy());
        setInstalledOn(from.getInstalledOn());
        setExecutionTime(from.getExecutionTime());
        setSuccess(from.getSuccess());
    }

    @Override
    public <E extends ISchemaVersion> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SchemaVersionRecord
     */
    public SchemaVersionRecord() {
        super(SchemaVersion.SCHEMA_VERSION);
    }

    /**
     * Create a detached, initialised SchemaVersionRecord
     */
    public SchemaVersionRecord(Integer installedRank, String version, String description, String type, String script, Integer checksum, String installedBy, LocalDateTime installedOn, Integer executionTime, Boolean success) {
        super(SchemaVersion.SCHEMA_VERSION);

        set(0, installedRank);
        set(1, version);
        set(2, description);
        set(3, type);
        set(4, script);
        set(5, checksum);
        set(6, installedBy);
        set(7, installedOn);
        set(8, executionTime);
        set(9, success);
    }
}
