/*
 * This file is generated by jOOQ.
 */
package com.ninjarmm.dao.jooq.tables.pojos;


import com.ninjarmm.dao.jooq.tables.interfaces.IDevice;

import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.UUID;

import javax.annotation.processing.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.13.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "device", schema = "public", uniqueConstraints = {
    @UniqueConstraint(name = "device_pk", columnNames = {"id"})
})
public class Device implements IDevice {

    private static final long serialVersionUID = -1648221141;

    private UUID           id;
    private String         systemname;
    private String         devicetype;
    private UUID           customerid;
    private OffsetDateTime lastmodifieddatetime;
    private BigDecimal     devicecost;
    private String         lastmodifiedby;

    public Device() {}

    public Device(IDevice value) {
        this.id = value.getId();
        this.systemname = value.getSystemname();
        this.devicetype = value.getDevicetype();
        this.customerid = value.getCustomerid();
        this.lastmodifieddatetime = value.getLastmodifieddatetime();
        this.devicecost = value.getDevicecost();
        this.lastmodifiedby = value.getLastmodifiedby();
    }

    public Device(
        UUID           id,
        String         systemname,
        String         devicetype,
        UUID           customerid,
        OffsetDateTime lastmodifieddatetime,
        BigDecimal     devicecost,
        String         lastmodifiedby
    ) {
        this.id = id;
        this.systemname = systemname;
        this.devicetype = devicetype;
        this.customerid = customerid;
        this.lastmodifieddatetime = lastmodifieddatetime;
        this.devicecost = devicecost;
        this.lastmodifiedby = lastmodifiedby;
    }

    @Id
    @Column(name = "id", nullable = false)
    @Override
    public UUID getId() {
        return this.id;
    }

    @Override
    public Device setId(UUID id) {
        this.id = id;
        return this;
    }

    @Column(name = "systemname")
    @Override
    public String getSystemname() {
        return this.systemname;
    }

    @Override
    public Device setSystemname(String systemname) {
        this.systemname = systemname;
        return this;
    }

    @Column(name = "devicetype")
    @Override
    public String getDevicetype() {
        return this.devicetype;
    }

    @Override
    public Device setDevicetype(String devicetype) {
        this.devicetype = devicetype;
        return this;
    }

    @Column(name = "customerid")
    @Override
    public UUID getCustomerid() {
        return this.customerid;
    }

    @Override
    public Device setCustomerid(UUID customerid) {
        this.customerid = customerid;
        return this;
    }

    @Column(name = "lastmodifieddatetime")
    @Override
    public OffsetDateTime getLastmodifieddatetime() {
        return this.lastmodifieddatetime;
    }

    @Override
    public Device setLastmodifieddatetime(OffsetDateTime lastmodifieddatetime) {
        this.lastmodifieddatetime = lastmodifieddatetime;
        return this;
    }

    @Column(name = "devicecost")
    @Override
    public BigDecimal getDevicecost() {
        return this.devicecost;
    }

    @Override
    public Device setDevicecost(BigDecimal devicecost) {
        this.devicecost = devicecost;
        return this;
    }

    @Column(name = "lastmodifiedby")
    @Override
    public String getLastmodifiedby() {
        return this.lastmodifiedby;
    }

    @Override
    public Device setLastmodifiedby(String lastmodifiedby) {
        this.lastmodifiedby = lastmodifiedby;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Device other = (Device) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (systemname == null) {
            if (other.systemname != null)
                return false;
        }
        else if (!systemname.equals(other.systemname))
            return false;
        if (devicetype == null) {
            if (other.devicetype != null)
                return false;
        }
        else if (!devicetype.equals(other.devicetype))
            return false;
        if (customerid == null) {
            if (other.customerid != null)
                return false;
        }
        else if (!customerid.equals(other.customerid))
            return false;
        if (lastmodifieddatetime == null) {
            if (other.lastmodifieddatetime != null)
                return false;
        }
        else if (!lastmodifieddatetime.equals(other.lastmodifieddatetime))
            return false;
        if (devicecost == null) {
            if (other.devicecost != null)
                return false;
        }
        else if (!devicecost.equals(other.devicecost))
            return false;
        if (lastmodifiedby == null) {
            if (other.lastmodifiedby != null)
                return false;
        }
        else if (!lastmodifiedby.equals(other.lastmodifiedby))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.systemname == null) ? 0 : this.systemname.hashCode());
        result = prime * result + ((this.devicetype == null) ? 0 : this.devicetype.hashCode());
        result = prime * result + ((this.customerid == null) ? 0 : this.customerid.hashCode());
        result = prime * result + ((this.lastmodifieddatetime == null) ? 0 : this.lastmodifieddatetime.hashCode());
        result = prime * result + ((this.devicecost == null) ? 0 : this.devicecost.hashCode());
        result = prime * result + ((this.lastmodifiedby == null) ? 0 : this.lastmodifiedby.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Device (");

        sb.append(id);
        sb.append(", ").append(systemname);
        sb.append(", ").append(devicetype);
        sb.append(", ").append(customerid);
        sb.append(", ").append(lastmodifieddatetime);
        sb.append(", ").append(devicecost);
        sb.append(", ").append(lastmodifiedby);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IDevice from) {
        setId(from.getId());
        setSystemname(from.getSystemname());
        setDevicetype(from.getDevicetype());
        setCustomerid(from.getCustomerid());
        setLastmodifieddatetime(from.getLastmodifieddatetime());
        setDevicecost(from.getDevicecost());
        setLastmodifiedby(from.getLastmodifiedby());
    }

    @Override
    public <E extends IDevice> E into(E into) {
        into.from(this);
        return into;
    }
}
