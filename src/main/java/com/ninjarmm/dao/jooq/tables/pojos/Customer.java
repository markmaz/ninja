/*
 * This file is generated by jOOQ.
 */
package com.ninjarmm.dao.jooq.tables.pojos;


import com.ninjarmm.dao.jooq.tables.interfaces.ICustomer;

import java.time.OffsetDateTime;
import java.util.UUID;

import javax.annotation.processing.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.13.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "customer", schema = "public", uniqueConstraints = {
    @UniqueConstraint(name = "customers_pk", columnNames = {"id"})
})
public class Customer implements ICustomer {

    private static final long serialVersionUID = -27862137;

    private UUID           id;
    private String         name;
    private String         lastmodifiedby;
    private OffsetDateTime lastmodifieddatetime;

    public Customer() {}

    public Customer(ICustomer value) {
        this.id = value.getId();
        this.name = value.getName();
        this.lastmodifiedby = value.getLastmodifiedby();
        this.lastmodifieddatetime = value.getLastmodifieddatetime();
    }

    public Customer(
        UUID           id,
        String         name,
        String         lastmodifiedby,
        OffsetDateTime lastmodifieddatetime
    ) {
        this.id = id;
        this.name = name;
        this.lastmodifiedby = lastmodifiedby;
        this.lastmodifieddatetime = lastmodifieddatetime;
    }

    @Id
    @Column(name = "id", nullable = false)
    @Override
    public UUID getId() {
        return this.id;
    }

    @Override
    public Customer setId(UUID id) {
        this.id = id;
        return this;
    }

    @Column(name = "name")
    @Override
    public String getName() {
        return this.name;
    }

    @Override
    public Customer setName(String name) {
        this.name = name;
        return this;
    }

    @Column(name = "lastmodifiedby")
    @Override
    public String getLastmodifiedby() {
        return this.lastmodifiedby;
    }

    @Override
    public Customer setLastmodifiedby(String lastmodifiedby) {
        this.lastmodifiedby = lastmodifiedby;
        return this;
    }

    @Column(name = "lastmodifieddatetime")
    @Override
    public OffsetDateTime getLastmodifieddatetime() {
        return this.lastmodifieddatetime;
    }

    @Override
    public Customer setLastmodifieddatetime(OffsetDateTime lastmodifieddatetime) {
        this.lastmodifieddatetime = lastmodifieddatetime;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Customer other = (Customer) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (name == null) {
            if (other.name != null)
                return false;
        }
        else if (!name.equals(other.name))
            return false;
        if (lastmodifiedby == null) {
            if (other.lastmodifiedby != null)
                return false;
        }
        else if (!lastmodifiedby.equals(other.lastmodifiedby))
            return false;
        if (lastmodifieddatetime == null) {
            if (other.lastmodifieddatetime != null)
                return false;
        }
        else if (!lastmodifieddatetime.equals(other.lastmodifieddatetime))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.lastmodifiedby == null) ? 0 : this.lastmodifiedby.hashCode());
        result = prime * result + ((this.lastmodifieddatetime == null) ? 0 : this.lastmodifieddatetime.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Customer (");

        sb.append(id);
        sb.append(", ").append(name);
        sb.append(", ").append(lastmodifiedby);
        sb.append(", ").append(lastmodifieddatetime);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(ICustomer from) {
        setId(from.getId());
        setName(from.getName());
        setLastmodifiedby(from.getLastmodifiedby());
        setLastmodifieddatetime(from.getLastmodifieddatetime());
    }

    @Override
    public <E extends ICustomer> E into(E into) {
        into.from(this);
        return into;
    }
}
