/*
 * This file is generated by jOOQ.
 */
package com.ninjarmm.dao.jooq.tables.interfaces;


import java.io.Serializable;
import java.time.LocalDateTime;

import javax.annotation.processing.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Index;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.13.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "schema_version", schema = "public", uniqueConstraints = {
    @UniqueConstraint(name = "schema_version_pk", columnNames = {"installed_rank"})
}, indexes = {
    @Index(name = "schema_version_s_idx", columnList = "success ASC")
})
public interface ISchemaVersion extends Serializable {

    /**
     * Setter for <code>public.schema_version.installed_rank</code>.
     */
    public ISchemaVersion setInstalledRank(Integer value);

    /**
     * Getter for <code>public.schema_version.installed_rank</code>.
     */
    @Id
    @Column(name = "installed_rank", nullable = false, precision = 32)
    public Integer getInstalledRank();

    /**
     * Setter for <code>public.schema_version.version</code>.
     */
    public ISchemaVersion setVersion(String value);

    /**
     * Getter for <code>public.schema_version.version</code>.
     */
    @Column(name = "version", length = 50)
    public String getVersion();

    /**
     * Setter for <code>public.schema_version.description</code>.
     */
    public ISchemaVersion setDescription(String value);

    /**
     * Getter for <code>public.schema_version.description</code>.
     */
    @Column(name = "description", nullable = false, length = 200)
    public String getDescription();

    /**
     * Setter for <code>public.schema_version.type</code>.
     */
    public ISchemaVersion setType(String value);

    /**
     * Getter for <code>public.schema_version.type</code>.
     */
    @Column(name = "type", nullable = false, length = 20)
    public String getType();

    /**
     * Setter for <code>public.schema_version.script</code>.
     */
    public ISchemaVersion setScript(String value);

    /**
     * Getter for <code>public.schema_version.script</code>.
     */
    @Column(name = "script", nullable = false, length = 1000)
    public String getScript();

    /**
     * Setter for <code>public.schema_version.checksum</code>.
     */
    public ISchemaVersion setChecksum(Integer value);

    /**
     * Getter for <code>public.schema_version.checksum</code>.
     */
    @Column(name = "checksum", precision = 32)
    public Integer getChecksum();

    /**
     * Setter for <code>public.schema_version.installed_by</code>.
     */
    public ISchemaVersion setInstalledBy(String value);

    /**
     * Getter for <code>public.schema_version.installed_by</code>.
     */
    @Column(name = "installed_by", nullable = false, length = 100)
    public String getInstalledBy();

    /**
     * Setter for <code>public.schema_version.installed_on</code>.
     */
    public ISchemaVersion setInstalledOn(LocalDateTime value);

    /**
     * Getter for <code>public.schema_version.installed_on</code>.
     */
    @Column(name = "installed_on", nullable = false)
    public LocalDateTime getInstalledOn();

    /**
     * Setter for <code>public.schema_version.execution_time</code>.
     */
    public ISchemaVersion setExecutionTime(Integer value);

    /**
     * Getter for <code>public.schema_version.execution_time</code>.
     */
    @Column(name = "execution_time", nullable = false, precision = 32)
    public Integer getExecutionTime();

    /**
     * Setter for <code>public.schema_version.success</code>.
     */
    public ISchemaVersion setSuccess(Boolean value);

    /**
     * Getter for <code>public.schema_version.success</code>.
     */
    @Column(name = "success", nullable = false)
    public Boolean getSuccess();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface ISchemaVersion
     */
    public void from(ISchemaVersion from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface ISchemaVersion
     */
    public <E extends ISchemaVersion> E into(E into);
}
